////  CadastroView.swift//  PokéExplorer////  Created by user276508 on 14/06/25.//import SwiftUIimport SwiftDatastruct CadastroView: View {    @Environment(\.modelContext) var context    @Query var usuarios: [Usuario]    @Environment(\.dismiss) var dismiss    @State private var nome = ""    @State private var email = ""    @State private var senha = ""    @State private var confirmarSenha = ""    @State private var mensagemErro = ""    var body: some View {        NavigationView {            Form {                Section(header: Text("Crie sua conta")) {                    TextField("Nome de Usuário", text: $nome)                        .autocapitalization(.none)                    TextField("Email", text: $email)                        .autocapitalization(.none)                        .keyboardType(.emailAddress)                    SecureField("Senha", text: $senha)                    SecureField("Confirmar Senha", text: $confirmarSenha)                }                if !mensagemErro.isEmpty {                    Text(mensagemErro)                        .foregroundColor(.red)                }                Section {                    Button("Cadastrar") {                        cadastrarUsuario()                    }                    .buttonStyle(.borderedProminent)                }            }            .navigationTitle("Cadastro")        }    }    private func cadastrarUsuario() {        guard !nome.isEmpty, !email.isEmpty, !senha.isEmpty else {            mensagemErro = "Todos os campos são obrigatórios."            return        }        guard senha == confirmarSenha else {            mensagemErro = "As senhas não coincidem."            return        }        guard Validador.emailValido(email) else {            mensagemErro = "Email inválido."            return        }        guard Validador.senhaForte(senha) else {            mensagemErro = "A senha deve ter ao menos 6 caracteres, uma letra maiúscula e um número."            return        }        if usuarios.contains(where: { $0.email == email }) {            mensagemErro = "Já existe um usuário com este e-mail."            return        }        let novoUsuario = Usuario(nomeDeUsuario: nome, email: email, senha: senha)        context.insert(novoUsuario)        do {            try context.save()            mensagemErro = ""            dismiss()        } catch {            mensagemErro = "Erro ao salvar usuário."        }    }}