////  PokemonDetailView.swift//  PokeÃÅExplorer////  Created by user276508 on 15/06/25.//import SwiftUIimport SwiftDatastruct PokemonDetailView: View {    let pokemon: Pokemon    let usuario: Usuario        @StateObject private var viewModel: PokemonDetailViewModel    @Environment(\.modelContext) var context    init(pokemon: Pokemon, usuario: Usuario) {        self.pokemon = pokemon        self.usuario = usuario        _viewModel = StateObject(wrappedValue: PokemonDetailViewModel(pokemon: pokemon, usuario: usuario))    }    var body: some View {        VStack(spacing: 16) {            AsyncImage(url: URL(string: pokemon.imageURL)) { phase in                switch phase {                case .success(let image):                    image                        .resizable()                        .aspectRatio(contentMode: .fit)                        .transition(.asymmetric(                            insertion: .scale(scale: 0.5).combined(with: .opacity),                            removal: .opacity)                        )                case .failure:                    Image(systemName: "photo")                        .font(.largeTitle)                default:                    ProgressView()                }            }            .frame(width: 150, height: 150)            .padding(.bottom, 10)            Text(pokemon.name.capitalized)                .font(DesignTokens.Fonts.title)            Text("Altura: \(pokemon.height)")            Text("Peso: \(pokemon.weight)")            Text("Tipos: \(pokemon.types.map { $0.type.name }.joined(separator: ", "))")            Text("Habilidades: \(pokemon.abilities.map { $0.ability.name }.joined(separator: ", "))")            Button(action: {                            withAnimation(.spring(response: 0.4, dampingFraction: 0.5)) {                                viewModel.toggleFavorito(contexto: context)                            }                        }) {                            HStack {                                Image(systemName: viewModel.isFavorito ? "heart.fill" : "heart")                                    .scaleEffect(viewModel.isFavorito ? 1.25 : 1.0)                                Text(viewModel.isFavorito ? "Remover dos Favoritos" : "Adicionar aos Favoritos")                            }                            .padding()                            .background(DesignTokens.Colors.primary.opacity(0.2))                            .cornerRadius(10)                        }                        Spacer()        }        .padding()        .navigationTitle("Detalhes")        .onAppear {            viewModel.verificarFavorito(contexto: context)        }    }}