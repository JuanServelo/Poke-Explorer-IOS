////  PokeAPIService.swift//  PokeÃÅExplorer////  Created by user276508 on 14/06/25.//import Foundationclass PokeAPIService {    func fetchPokemonList(completion: @escaping (Result<[Pokemon], Error>) -> Void) {        guard let url = URL(string: "https://pokeapi.co/api/v2/pokemon?limit=50") else {            completion(.failure(URLError(.badURL)))            return        }        URLSession.shared.dataTask(with: url) { data, _, error in            if let error = error {                completion(.failure(error))                return            }            guard let data = data else {                completion(.failure(NSError(domain: "Sem dados", code: 0)))                return            }            do {                let decoded = try JSONDecoder().decode(PokemonListResponse.self, from: data)                var pokemons: [Pokemon] = []                let group = DispatchGroup()                for resource in decoded.results {                    group.enter()                    self.fetchPokemonDetail(from: resource.url) { result in                        if case .success(let pokemon) = result {                            pokemons.append(pokemon)                        }                        group.leave()                    }                }                group.notify(queue: .main) {                    completion(.success(pokemons.sorted { $0.id < $1.id }))                }            } catch {                completion(.failure(error))            }        }.resume()    }    func fetchPokemonDetail(from urlString: String, completion: @escaping (Result<Pokemon, Error>) -> Void) {        guard let url = URL(string: urlString) else {            completion(.failure(URLError(.badURL)))            return        }        URLSession.shared.dataTask(with: url) { data, _, error in            if let error = error {                completion(.failure(error))                return            }            guard let data = data else {                completion(.failure(NSError(domain: "Sem dados", code: 0)))                return            }            do {                let decoded = try JSONDecoder().decode(Pokemon.self, from: data)                let imageURL = "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\(decoded.id).png"                let enriched = Pokemon(                    id: decoded.id,                    name: decoded.name,                    imageURL: imageURL,                    height: decoded.height,                    weight: decoded.weight,                    types: decoded.types,                    abilities: decoded.abilities                )                completion(.success(enriched))            } catch {                completion(.failure(error))            }        }.resume()    }}