////  PokemonDetailViewModel.swift//  PokéExplorer////  Created by user276508 on 15/06/25.//import Foundationimport SwiftDataimport SwiftUI@MainActorclass PokemonDetailViewModel: ObservableObject {    @Published var isFavorito: Bool = false    private var pokemon: Pokemon    private var usuario: Usuario    init(pokemon: Pokemon, usuario: Usuario) {        self.pokemon = pokemon        self.usuario = usuario    }    func verificarFavorito(contexto: ModelContext) {        // **CORREÇÃO APLICADA AQUI**        let pokemonID = pokemon.id        let userEmail = usuario.email        let descriptor = FetchDescriptor<Favorito>(            predicate: #Predicate { $0.pokemonId == pokemonID && $0.usuarioEmail == userEmail }        )        do {            let favoritos = try contexto.fetch(descriptor)            self.isFavorito = !favoritos.isEmpty        } catch {            print("Erro ao buscar favorito: \(error)")            self.isFavorito = false        }    }    func toggleFavorito(contexto: ModelContext) {        // **CORREÇÃO APLICADA AQUI**        let pokemonID = pokemon.id        let userEmail = usuario.email        let descriptor = FetchDescriptor<Favorito>(            predicate: #Predicate { $0.pokemonId == pokemonID && $0.usuarioEmail == userEmail }        )        do {            if let favoritoExistente = try contexto.fetch(descriptor).first {                // Remove dos favoritos                contexto.delete(favoritoExistente)            } else {                // Adiciona aos favoritos                let novoFavorito = Favorito(                    pokemonId: pokemon.id,                    nome: pokemon.name,                    imagemURL: pokemon.imageURL,                    usuarioEmail: usuario.email                )                contexto.insert(novoFavorito)            }            try contexto.save()            self.isFavorito.toggle()        } catch {            print("Erro ao salvar o estado do favorito: \(error)")        }    }}