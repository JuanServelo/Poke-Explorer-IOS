////  CadastroViewModel.swift//  PokéExplorer////  Created by user276508 on 15/06/25.//import Foundationimport SwiftData@MainActorclass CadastroViewModel: ObservableObject {    @Published var nome: String = ""    @Published var email: String = ""    @Published var senha: String = ""    @Published var confirmarSenha: String = ""    @Published var mensagemErro: String? = nil    @Published var cadastroConcluido = false    func cadastrar(contexto: ModelContext) {        mensagemErro = nil        guard !nome.isEmpty, !email.isEmpty, !senha.isEmpty else {            mensagemErro = "Todos os campos são obrigatórios."            return        }        guard senha == confirmarSenha else {            mensagemErro = "As senhas não coincidem."            return        }        guard Validador.emailValido(email) else {            mensagemErro = "Email inválido."            return        }        guard Validador.senhaForte(senha) else {            mensagemErro = "A senha deve ter ao menos 6 caracteres, uma letra maiúscula e um número."            return        }        let descriptor = FetchDescriptor<Usuario>(predicate: #Predicate { $0.email == email })        do {            let existingUsers = try contexto.fetch(descriptor)            if !existingUsers.isEmpty {                mensagemErro = "Já existe um usuário com este e-mail."                return            }        } catch {            mensagemErro = "Erro ao verificar usuário existente."            return        }        let novoUsuario = Usuario(nomeDeUsuario: nome, email: email, senha: senha)        contexto.insert(novoUsuario)        do {            try contexto.save()            cadastroConcluido = true        } catch {            mensagemErro = "Erro ao salvar usuário."        }    }}